/* layer order */
@layer root, reset, theming, base, typography, components, utilities;

/* font-faces need global scope */

@font-face {
	font-family: 'Courier Prime';
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src: url('/fonts/CourierPrime-Regular.woff2') format('woff2');
}

@font-face {
	font-family: 'Bronova';
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src: url('/fonts/Bronova-Regular.woff2') format('woff2');
}

@font-face {
	font-family: 'Bronova Bold';
	font-style: normal;
	font-weight: 700;
	font-display: swap;
	src: url('/fonts/Bronova-bold.woff2') format('woff2');
}

@font-face {
	font-family: 'Ultra';
	font-style: normal;
	font-weight: 700;
	font-display: swap;
	src: url('/fonts/Ultra-Regular.woff2') format('woff2');
}

@layer root {
	:root {
		/* fonts */
		--mono: 'Courier Prime', monospace;
		--bronova: 'Bronova', sans-serif;
		--bronova-bold: 'Bronova Bold', sans-serif;
		--ultra: 'Ultra', sans-serif;

		/* sizing */
		--base-size: 1.2rem;
		--scale: 1.2;
		--radius: 5px;
		--xxl: calc(var(--xl) * var(--scale) * var(--scale));
		--xl: calc(var(--h1) * var(--scale) * var(--scale));
		--lg: calc(var(--h1) * var(--scale));
		--h1: calc(var(--h2) * var(--scale));
		--h2: calc(var(--h3) * var(--scale));
		--h3: calc(var(--h4) * var(--scale));
		--h4: calc(var(--h5) * var(--scale));
		--h5: calc(var(--h6) * var(--scale));
		--h6: var(--base-size);
		--sm: calc(var(--base-size) / var(--scale));
		--xs: calc(var(--sm) / var(--scale));
	}

	@media (prefers-reduced-motion: no-preference) {
		html {
			scroll-behavior: smooth;
		}
	}
}

@layer reset {
	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		scrollbar-color: var(--off-white) var(--blacker);
	}
}

@layer base {
	html,
	body {
		--timing: 0.75s;
		width: 100%;
		height: auto;
		overflow-x: hidden;
		overflow-y: auto;
		background: var(--clr-bg);
		transition:
			background-color var(--timing) ease,
			color var(--timing) ease;
		will-change: background-color, color;
	}

	body {
		cursor: url('/icons/pointer.svg'), auto;
		font-family: var(--bronova);
		font-size: 16px;
		font-weight: 500;
		line-height: 1.5;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		width: 100%;
		height: 100%;
		font-display: swap;
	}

	main > svg {
		display: block;
		margin-inline: auto;
		max-width: 75%;
		height: auto;
		text-align: center;
	}

	img {
		font-style: italic;
		/* Prevent layout shift for images */
		height: auto;
		max-width: 100%;
		aspect-ratio: attr(width) / attr(height);
	}

	/* CLS prevention for images without explicit dimensions */
	img:not([width]):not([height]) {
		aspect-ratio: 16 / 9; /* Default aspect ratio */
		width: 100%;
		height: auto;
	}

	/* Prevent layout shift for lazy-loaded content */
	[loading='lazy'] {
		min-height: 200px;
	}
}

@layer typography {
	a {
		cursor: pointer;
		text-underline-offset: 0.3rem;
	}

	h1 {
		text-align: center;
		color: var(--sky);
		font-family: var(--ultra);
	}

	h2 {
		text-align: center;
		color: var(--sky);
		font-family: var(--bronova);
	}

	h3,
	h4 {
		text-align: center;
		font-family: var(--bronova);
		color: var(--purple);
	}
}

@layer utilities {
	.visually-hidden {
		position: absolute;
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		overflow: hidden;
		width: 1px;
		height: 1px;
		white-space: nowrap;
	}

	/* CLS Prevention Utilities */
	.cls-container {
		/* Reserve space to prevent layout shifts */
		min-height: var(--min-content-height, 200px);
		contain: layout;
	}

	.cls-hero {
		/* For hero sections - reserve full viewport */
		min-height: 100vh;
		contain: layout;
	}

	.cls-image {
		/* For images without explicit dimensions */
		aspect-ratio: 16 / 9;
		width: 100%;
		height: auto;
	}

	.cls-canvas {
		/* For canvas elements (Three.js, etc.) */
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		min-height: 100vh;
		display: block;
	}
}

@layer theming {
	:root {
		/* Base custom colors */
		--blackest: hsl(0, 15%, 5%);
		--white: hsla(0, 0%, 100%, 0.75);
		--sky: hsla(187, 39%, 55%, 0.5);
		--purple: hsla(227, 98%, 68%, 0.6);
		--yellow: hsla(46, 93%, 42%, 0.75);
		--dark-blue: hsla(203, 94%, 20%, 0.75);
		--darker-blue: hsla(203, 84%, 15%, 0.75);
		--darkest-blue: hsla(203, 96%, 10%, 0.75);
		--pale: hsl(44, 94%, 40%);
		--light-gray: hsl(0, 1%, 50%);
		--gray: hsl(0, 0%, 40%);
		--dark-gray: hsl(0, 0%, 25%);
		--success-light: hsl(120, 49%, 32%);
		--success-dark: hsl(120, 83%, 25%);
		--fail-light: hsl(0, 51%, 33%);
		--fail-dark: hsl(0, 82%, 26%);
		--warning-light: hsl(45, 51%, 35%);
		--warning-dark: hsl(45, 77%, 26%);

		/* Theme variables using light-dark() and custom colors */
		--clr-bg: light-dark(var(--white), var(--blackest));
		--clr-main: light-dark(var(--blackest), var(--white));
		--clr-blue: light-dark(var(--darker-blue), var(--sky));
		--clr-link: light-dark(var(--purple), var(--sky));
		--clr-pale: light-dark(var(--yellow), var(--pale));
		--clr-gray: light-dark(var(--gray), var(--dark-gray));
		--clr-green: light-dark(var(--success-dark), var(--success-light));
		--clr-light-gray: light-dark(var(--light-gray), var(--dark-gray));
		--clr-inverted: light-dark(var(--white), var(--blackest));
		--clr-button-text: light-dark(var(--blackest), var(--white));
		--clr-button: light-dark(var(--yellow), var(--purple));
		--sun: light-dark(var(--yellow), var(--pale));
		--moon: light-dark(var(--darkest-blue), var(--sky));
		--opacity: light-dark(1, 0.85);

		--success: light-dark(var(--success-light), var(--success-dark));
		--fail: light-dark(var(--fail-light), var(--fail-dark));
		--warning: light-dark(var(--warning-light), var(--warning-dark));
	}

	/* Manual overrides */
	:root.light {
		--clr-bg: var(--white);
		--clr-main: var(--blackest);
		--clr-blue: var(--darkest-blue);
		--clr-link: var(--purple);
		--clr-pale: var(--yellow);
		--clr-inverted: var(--white);
		--clr-button-text: var(--blackest);
		--clr-button: var(--yellow);
		--sun: var(--yellow);
		--moon: var(--darkest-blue);
		--opacity: 1;
		--success: var(--success-light);
		--fail: var(--fail-light);
		--warning: var(--warning-light);
	}

	:root.dark {
		--clr-bg: var(--blackest);
		--clr-main: var(--white);
		--clr-blue: var(--sky);
		--clr-link: var(--sky);
		--clr-pale: var(--pale);
		--clr-inverted: var(--blackest);
		--clr-button-text: var(--white);
		--clr-button: var(--purple);
		--sun: var(--pale);
		--moon: var(--sky);
		--opacity: 0.85;
		--success: var(--success-dark);
		--fail: var(--fail-dark);
		--warning: var(--warning-dark);
	}
}
